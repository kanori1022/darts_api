name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: database
      MYSQL_DATABASE_TEST: database_test
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: root
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and start services
        run: |
          docker compose --profile ci up -d --build
          # Wait for database to be ready
          sleep 15
          # Check if services are running
          docker compose --profile ci ps

      - name: Wait for database to be ready
        run: |
          # Wait for MySQL to be ready
          until docker compose --profile ci exec -T db-ci mysqladmin ping -h localhost --silent; do
            echo "Waiting for database..."
            sleep 2
          done
          echo "Database is ready!"

      - name: Wait for API service to be ready
        run: |
          # Wait for API service to be running
          until docker compose --profile ci ps api-ci | grep -q "Up"; do
            echo "Waiting for API service..."
            sleep 2
          done
          echo "API service is ready!"

      - name: Run database migrations
        run: docker compose --profile ci exec -T api-ci rails db:migrate RAILS_ENV=test

      - name: Run RSpec tests
        run: docker compose --profile ci exec -T api-ci rspec

      - name: Stop services
        if: always()
        run: docker compose --profile ci down

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Ruby
  #       uses: ruby/setup-ruby@v1
  #       with:
  #         ruby-version: .ruby-version
  #         bundler-cache: true

  #     - name: Lint code for consistent style
  #       run: bundle exec rubocop

